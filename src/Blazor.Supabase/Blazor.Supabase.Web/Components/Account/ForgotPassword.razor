@page "/account/forgot-password"
@using BlazorSupabase.Web.Helpers
@using BlazorSupabase.Web.Services

<h1>Forgot password ?</h1>

<RadzenCard class="rz-my-12 rz-mx-auto rz-p-4 rz-p-md-12" style="max-width: 600px;">
	<RadzenTemplateForm Context="registerForm" TItem="ForgotPasswordModel" Data=@model Submit=@Submit InvalidSubmit=@OnInvalidSubmit>
		<RadzenStack Gap="1rem" class="rz-p-sm-12">
			<RadzenFormField Text="Email" Variant="@variant">
				<ChildContent>
					<RadzenTextBox Name="Email" @bind-Value=@model.Email />
				</ChildContent>
				<Helper>
					<RadzenRequiredValidator Component="Email" Text="Email is required" />
					<RadzenEmailValidator Component="Email" Text="Email not valid" />
				</Helper>
			</RadzenFormField>
			<RadzenButton ButtonType="ButtonType.Submit" Text="Send recovery link"></RadzenButton>
		</RadzenStack>
	</RadzenTemplateForm>
</RadzenCard>

@code {
	Variant variant = Variant.Outlined;

	[Inject]
	NotificationService _notificationService { get; set; }

	[Inject]
	AuthService _authService { get; set; }

	ForgotPasswordModel model = new ForgotPasswordModel();

	class ForgotPasswordModel
	{
		public string Email { get; set; }
	}

	async Task Submit(ForgotPasswordModel model)
	{
		var result = await _authService.ForgotPasswordAsync(model.Email);

		if (result.IsSuccess)
		{
			_notificationService.Notify(NotificationSeverity.Success, "An email has been sent to you", "Please check your email to reset your password");
			model = new ForgotPasswordModel();
		}
		else
		{
			_notificationService.Notify(NotificationSeverity.Error, "Error sending email", result.Errors.ToStringError());
		}
	}

	void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
	{
		_notificationService.Notify(NotificationSeverity.Error, "Error validating form", "Please check the fields");
	}
}